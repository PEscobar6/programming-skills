
worker_processes  1;

events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value: 
    # max_clients = worker_processes * worker_connections
}

http {
    include       mime.types;
    # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block

    default_type  application/octet-stream;
    #

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    # If serving locally stored static files, sendfile is essential to speed up the server,
    # But if using as reverse proxy one can deactivate it
    
    #tcp_nopush     on;
    # works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.

    #keepalive_timeout  0;
    keepalive_timeout  65;
    # timeout during which a keep-alive client connection will stay open.

    #gzip  on;
    # tells the server to use on-the-fly gzip compression.

    server {
        # You would want to make a separate file with its own server block for each virtual domain
        # on your server and then include them.
        listen      80;
        #Â listen      443 ssl;
        # server_name vivabots.com www.vivabots.com;
        server_name localhost;
        # tells Nginx the hostname and the TCP port where it should listen for HTTP connections.
        # listen 80; is equivalent to listen *:80;
        
        # server_name  localhost;
        # lets you doname-based virtual hosting

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #SSL-START SSL related configuration, do NOT delete or modify the next line of commented-out 404 rules
        #error_page 404/404.html;
        #HTTP_TO_HTTPS_START
        # if ($server_port !~ 443){
        #     rewrite ^(/.*)$ https://$host$1 permanent;
        # }

        # #HTTP_TO_HTTPS_END

        # ssl_certificate              fullchain.pem;
        # ssl_certificate_key          privkey.pem;
        # ssl_protocols                TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        # ssl_ciphers                  ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        # ssl_prefer_server_ciphers    on;
        # ssl_session_cache            shared:SSL:10m;
        # ssl_session_timeout          10m;  

        #SSL-END

        

        location /api/ {
            proxy_pass          http://api:3000/;
            proxy_http_version  1.1;
            proxy_redirect      off;
            proxy_set_header    X-Real-IP            $remote_addr;
            proxy_set_header    Host                 $host;
            proxy_set_header    Upgrade              $http_upgrade;
            proxy_set_header    X-Forwarded-For      $proxy_add_x_forwarded_for;
            proxy_set_header    X-Forwarded-Proto    $scheme;

        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}